#------------------------------------------------------------------
# MEDIPI TELEHEALTH SYSTEM PROPERTIES FILE
#------------------------------------------------------------------

#Directory for the main MEDIPI Logs
medipi.log ${config-directory-location}/logs

# Screensize settings - default is 800x480 if not set
medipi.screen.width 800
medipi.screen.height 480

# Operation of the close/shutdown buttons - do they close the app or close down the Linux OS on which it is running
medipi.shutdownlinuxosonclose n

# CSS file location
medipi.css ${config-directory-location}/CSS/MediPiGeneral.css

# Authentication
# Authentication lifespan in seconds - how long inactive before medipi will ask to be reauthorised
medipi.authentication.lifespan 300
medipi.authentication.class org.medipi.authentication.Keypad

# synchronise time with time server
medipi.timesyncserver.directory ${config-directory-location}/timesync
# Script to synchronise time with time server
medipi.timesyncserver.script ${config-directory-location}/timesync/timesync.sh
# returned phrase to search for in the time server reponse
medipi.timesyncserver.responsestring time server

#period in seconds to check for wifi connection from underlying OS - default 10s
medipi.wifi.monitorresfreshperiod 5

# Outbound payload save directory location
medipi.outboundpayload ${config-directory-location}/outboundPayload

# Data separation delimiter for all data taken and passed between a)drivers and devices and b) MediPi patient/client and host. 
# Spaces and tabs cannot be used. default value is "^"
medipi.dataseparator ^

# Image files
medipi.images.exclaim ${config-directory-location}/images/exclaim_cartoon.png
medipi.images.arrow ${config-directory-location}/images/arrow.png
medipi.images.pass ${config-directory-location}/images/pass_cartoon.png
medipi.images.fail ${config-directory-location}/images/fail_cartoon.png
medipi.images.cancel	${config-directory-location}/images/no.png
medipi.images.record	${config-directory-location}/images/record.png
medipi.images.stop	${config-directory-location}/images/stop.png
medipi.images.yes	${config-directory-location}/images/yes.png
medipi.images.no	${config-directory-location}/images/no.png
medipi.images.play	${config-directory-location}/images/play.png
medipi.images.doctor	${config-directory-location}/Doctor-Female1.png
#------------------------------------------------------------------
# PATIENT DETAILS
#------------------------------------------------------------------
# Patient Microbanner info - patient firstname
medipi.patientdetails.location ${config-directory-location}/patient/patient.json
#------------------------------------------------------------------
# EXECUTION MODES
#------------------------------------------------------------------
# debug mode will send all std and err output to the version screen accessed by tapping the MediPi Telehealth banner label
medipi.debugmode y
#------------------------------------------------------------------
# DASHBOARD ELEMENTS
#------------------------------------------------------------------
# List of element class tokens - elements to be loaded into MediPi
# The order of the class tokens relects the order that the classes will be called and also the order in which they will appear in the dashboard
medipi.elementclasstokens BloodPressureCuffSitting Oximeter Thermometer BloodPressureCuffStanding Scale HeartFailureQuestionnaire COPDQuestionnaire DiabetesQuestionnaire Transmitter Scheduler Responses Messenger Settings

#------------------------------------------------------------------
# CONTINUA IEEE11073 
#------------------------------------------------------------------
# Location of Python Agent
medipi.iee11073.agent.python ${config-directory-location}/bluetooth/medipi_healthd.py
medipi.iee11073.manager.python ${config-directory-location}/../antidote-master/apps/healthd

#------------------------------------------------------------------
# DEVICE DEFINITIONS
#------------------------------------------------------------------

#Definition of Contec CMS50D+ Oximeter
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.OximeterUSB.class org.medipi.devices.drivers.ContecCMS50DPlus
medipi.element.OximeterUSB.portname /dev/ttyUSB0
# Small image used for the dashboard icon
medipi.element.OximeterUSB.image ${config-directory-location}/images/cms50d.jpg
# Location of the guide for this device
medipi.element.OximeterUSB.guide ${config-directory-location}/guides/contecCMS50DPlus.guide
# Switch to show the dashboard tile
medipi.element.OximeterUSB.showdashboardtile no

#Definition of Nonin Oximeter
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.Oximeter.class org.medipi.devices.drivers.Nonin9560Continua
# Name and location of the concrete class which processes raw data coming in from the device
#medipi.element.Oximeter.class org.medipi.devices.drivers.Nonin9560
# Small image used for the dashboard icon
medipi.element.Oximeter.image ${config-directory-location}/images/nonin9560.jpg
# Location of the guide for this device
medipi.element.Oximeter.guide ${config-directory-location}/guides/nonin9560.guide
# Location of the mode setting guide for this device
medipi.element.Oximeter.modeset ${config-directory-location}/guides/nonin9560_mode_set.guide
# Switch to show the dashboard tile
medipi.element.Oximeter.showdashboardtile no
# testing the returned data from the device
# Period of time within which MediPi will accept data from the device (device's reported time vs MediPi's time). Otherwise the device's time will need resetting. Period of time in minutes
medipi.element.Oximeter.storeddevicetimestampdeviation 5
medipi.element.Oximeter.realtimedevicetimestampdeviation 5
medipi.element.Oximeter.enforcewithincurrentscheduledperiod y
medipi.element.Oximeter.returnonlythelatestvalue y

#Definition of Beurer BF480 Scale
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.ScaleUSB.class org.medipi.devices.drivers.BeurerBF480
# Which patient/user data to choose - the Beurer BF480 can take 10 users 1-10
medipi.element.ScaleUSB.user 1
# Small image used for the dashboard icon
medipi.element.ScaleUSB.image ${config-directory-location}/images/bf480.jpg
# Location of the guide for this device
medipi.element.ScaleUSB.guide ${config-directory-location}/guides/beurerbf480.guide
# Switch to show the dashboard tile
medipi.element.ScaleUSB.showdashboardtile no

#Definition of Scale
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.Scale.class org.medipi.devices.drivers.MarsdenM430
# Small image used for the dashboard icon
medipi.element.Scale.image ${config-directory-location}/images/M430.jpg
# Location of the guide for this device
medipi.element.Scale.guide ${config-directory-location}/guides/marsdenm430.guide
# take the timestamp from the device or from MediPi? This is safe to do as the reading is dynamic
medipi.element.Scale.taketimefromdevice no
# Switch to show the dashboard tile
medipi.element.Scale.showdashboardtile no

#Definition of Blood Pressure Cuff
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.BloodPressureCuffUSB.class org.medipi.devices.drivers.BeurerBM55
# Which patient/user data to choose - the Beurer BM55 can take users A or B
medipi.element.BloodPressureCuffUSB.user A
# Small image used for the dashboard icon
medipi.element.BloodPressureCuffUSB.image ${config-directory-location}/images/bm55.jpg
# Location of the guide for this device
medipi.element.BloodPressureCuffUSB.guide ${config-directory-location}/guides/beurerbm55.guide
# Switch to show the dashboard tile
medipi.element.BloodPressureCuffUSB.showdashboardtile no

#Definition of Blood Pressure Cuff SITTING
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.BloodPressureCuffSitting.class org.medipi.devices.drivers.Omron708BT
# measurement context - how the measurement was taken - spaces will be removed to be appended to the profileid
medipi.element.BloodPressureCuffSitting.measurementcontext sitting
# Small image used for the dashboard icon
medipi.element.BloodPressureCuffSitting.image ${config-directory-location}/images/omron-708-bt-sitting_icon.jpg
# Location of the guide for this device
medipi.element.BloodPressureCuffSitting.guide ${config-directory-location}/guides/omron708bt_sitting.guide
# testing the returned data from the device
#Period of time within which MediPi will accept data from the device (device's reported time vs MediPi's time). Otherwise the device's time will need resetting. Period of time in minutes

medipi.element.BloodPressureCuffSitting.storeddevicetimestampdeviation 60
medipi.element.BloodPressureCuffSitting.enforcewithincurrentscheduledperiod y
medipi.element.BloodPressureCuffSitting.returnonlythelatestvalue y
# Switch to show the dashboard tile
medipi.element.BloodPressureCuffSitting.showdashboardtile no


#Definition of Blood Pressure Cuff STANDING
# Name and location of the concrete class which processes raw data coming in from the device
medipi.element.BloodPressureCuffStanding.class org.medipi.devices.drivers.Omron708BT
# measurement context - how the measurement was taken - spaces will be removed to be appended to the profileid
medipi.element.BloodPressureCuffStanding.measurementcontext standing
# Small image used for the dashboard icon
medipi.element.BloodPressureCuffStanding.image ${config-directory-location}/images/omron-708-bt-standing_icon.jpg
# Location of the guide for this device
medipi.element.BloodPressureCuffStanding.guide ${config-directory-location}/guides/omron708bt_standing.guide
# testing the returned data from the device
#Period of time within which MediPi will accept data from the device (device's reported time vs MediPi's time). Otherwise the device's time will need resetting. Period of time in minutes

medipi.element.BloodPressureCuffStanding.storeddevicetimestampdeviation 60
medipi.element.BloodPressureCuffStanding.enforcewithincurrentscheduledperiod y
medipi.element.BloodPressureCuffStanding.returnonlythelatestvalue y
# Switch to show the dashboard tile
medipi.element.BloodPressureCuffStanding.showdashboardtile no


#Definition of Thermometer
# Name and location of the concrete class where the thermometer is processed
medipi.element.Thermometer.class org.medipi.devices.drivers.BraunPro6000
medipi.element.Thermometer.title Thermometer
# Small image used for the dashboard icon
medipi.element.Thermometer.image ${config-directory-location}/images/Braun-Thermoscan.jpg
# Location of the guide for this device
medipi.element.Thermometer.guide ${config-directory-location}/guides/braunpro6000.guide
# Switch to show the dashboard tile
medipi.element.Thermometer.showdashboardtile no

#Definition of Heart Failure Questionnaire
# Name and location of the concrete class where the questionnaire is processed
medipi.element.HeartFailureQuestionnaire.class org.medipi.devices.Questionnaire
medipi.element.HeartFailureQuestionnaire.title Heart Questionnaire
medipi.element.HeartFailureQuestionnaire.questions ${config-directory-location}/questions/HeartFailure.questions
# Small image used for the dashboard icon
medipi.element.HeartFailureQuestionnaire.image ${config-directory-location}/images/questionnaire_cartoon.png
# Switch to show the dashboard tile
medipi.element.HeartFailureQuestionnaire.showdashboardtile no

#Definition of COPD Questionnaire
# Name and location of the concrete class where the questionnaire is processed
medipi.element.COPDQuestionnaire.class org.medipi.devices.Questionnaire
medipi.element.COPDQuestionnaire.title COPD Questionnaire
medipi.element.COPDQuestionnaire.questions ${config-directory-location}/questions/COPD.questions
# Small image used for the dashboard icon
medipi.element.COPDQuestionnaire.image ${config-directory-location}/images/questionnaire_cartoon.png
# Switch to show the dashboard tile
medipi.element.COPDQuestionnaire.showdashboardtile no

#Definition of Diabetes Questionnaire
# Name and location of the concrete class where the questionnaire is processed
medipi.element.DiabetesQuestionnaire.class org.medipi.devices.Questionnaire
medipi.element.DiabetesQuestionnaire.title Diabetes Questionnaire
medipi.element.DiabetesQuestionnaire.questions ${config-directory-location}/questions/Diabetes.questions
# Small image used for the dashboard icon
medipi.element.DiabetesQuestionnaire.image ${config-directory-location}/images/questionnaire_cartoon.png
# Switch to show the dashboard tile
medipi.element.DiabetesQuestionnaire.showdashboardtile no

#Definition of Scheduler
# Name and location of the concrete class which processes the Schedule
medipi.element.Scheduler.class org.medipi.devices.Scheduler
# location of schedule file containing schedule events
medipi.element.Scheduler.scheduler ${config-directory-location}/scheduler/schedule.json
#period to check the whether a new scheduled event is due in seconds
medipi.element.Scheduler.pollscheduletimer 15
# Small image used for the dashboard icon
medipi.element.Scheduler.image ${config-directory-location}/images/clock.png
# Switch to show the dashboard tile
medipi.element.Scheduler.showdashboardtile no
# period for which to show scheduler history in days
medipi.element.Scheduler.schedulerhistoryperiod 7
# record entries for MEASURED and STARTED schedule tasks - setting to n will reduce the size of the schedule.json file
medipi.element.Scheduler.recordextrametadatatofile n

#------------------------------------------------------------------
# ELEMENT DEFINITIONS
#------------------------------------------------------------------
#Definition of Messenger
# Name and location of the concrete class which processes Messages from clinician
medipi.element.Messenger.class org.medipi.devices.Messenger
# Directory in which to store incoming messages
medipi.element.Messenger.incomingmessagedirectory ${config-directory-location}/InboundMessages
# Small image used for the dashboard icon
medipi.element.Messenger.image ${config-directory-location}/images/email1.png
# Switch to show the dashboard tile
medipi.element.Messenger.showdashboardtile no

#Definition of Responses
# Name and location of the concrete class which processes Responses from clinician
medipi.element.Responses.class org.medipi.devices.Responses
# Directory in which to store incoming messages
medipi.element.Responses.incomingmessagedirectory ${config-directory-location}/InboundMessages
# Switch to show the dashboard tile
medipi.element.Responses.showdashboardtile no
# Images for superimposition for status
medipi.images.allinthreshold ${config-directory-location}/images/smiley.png
medipi.images.highesterror.outofthreshold ${config-directory-location}/images/frowney.png
medipi.images.highesterror.cantcalculate ${config-directory-location}/images/cannot_calculate.png
medipi.images.highesterror.missing ${config-directory-location}/images/question1.png

#Definition of Transmitter
# Name and location of the concrete class which handles the transmitter
medipi.element.Transmitter.class org.medipi.messaging.rest.RESTTransmitter
# Small image used for the dashboard icon
medipi.element.Transmitter.image ${config-directory-location}/images/transmitter_cartoon.png
# parameter to set if all devices' data should be deleted after sucessful transmission
medipi.element.Transmitter.clearallaftertransmission n
# Switch to show the dashboard tile
medipi.element.Transmitter.showdashboardtile no

#Definition of Settings
# Name and location of the concrete class which handles the settings
medipi.element.Settings.class org.medipi.devices.Settings
# Small image used for the dashboard icon
medipi.element.Settings.image ${config-directory-location}/images/settings_cartoon.png
# Location of credits file
medipi.element.Settings.credits ${config-directory-location}/credits.txt
# Switch to show the dashboard tile
medipi.element.Settings.showdashboardtile yes

#------------------------------------------------------------------
# BLUETOOTH PROPERTIES
#------------------------------------------------------------------
# properties file for bluetooth enabled devices
medipi.bluetooth.properties ${config-directory-location}/bluetooth/bluetooth.json
# period for which the blutooth connection will be attempted in seconds
medipi.bluetooth.connectionattemptperiod 40
#------------------------------------------------------------------
# VPN PROPERTIES
#------------------------------------------------------------------
# is the VPN functionality enabled?
medipi.vpn.enable n
# The location of the Open VPN configuration file (not necessary for Windows implementations)
medipi.vpn.configlocation ${config-directory-location}/vpn/xxxx.ovpn
# OpenVPN client name
medipi.vpn.clientname xxxx
# The command to run to open the OpenVPN connection
medipi.vpn.openvpncommand /usr/sbin/openvpn
# Location of the script to kill the OpenVPN connection
medipi.vpn.openvpnkiller ${config-directory-location}/vpn/openvpn-disconnect.sh
#------------------------------------------------------------------
# REST TRANSMISSION PROPERTIES
#------------------------------------------------------------------
#Connection properties
medipi.transmit.connecttimeout 10000
medipi.transmit.readtimeout 10000

#Location of concentrator host
medipi.transmit.resourcepath https://localhost:4444/MediPiConcentrator/webresources/

# Patient certificate JKS used to authorise access to the unit and encrypt the contents of the JSON payload
medipi.patient.cert.location	${config-directory-location}/certs/d9bc2478-062e-4b87-9060-4984f26b74be.jks
medipi.patient.cert.alias d9bc2478-062e-4b87-9060-4984f26b74be

# Device certificate JKS used to authenticate that the device and cert match and to encrypt the tramission - the MAC address used to unlock the JKS is in lowercase
medipi.device.cert.location	${config-directory-location}/certs/24b73cb7-934d-49d5-bf11-1e63ee9d26b3.jks

# Admin certificate JKS used to authorise access to the admin 
medipi.admin.cert.location ${config-directory-location}/certs/admin.jks

# 2-Way SSL/ TLS Mutual Authentication
medipi.transmit.truststore.location ${config-directory-location}/certs/client_device_truststore.jks
medipi.transmit.truststore.password password
#------------------------------------------------------------------
# JSON ENCRYPTION
#------------------------------------------------------------------
# Encryption cert
medipi.json.encrypt.truststore.location ${config-directory-location}/certs/client_patient_truststore.jks
medipi.json.encrypt.truststore.password password
medipi.json.encrypt.truststore.alias server
#------------------------------------------------------------------
# REST DOWNLOAD PROPERTIES
#------------------------------------------------------------------
#period to check for any downloadable entites in seconds
medipi.downloadable.pollperiod 30
#Number of attempts to ignore for resilience to transitory dropouts when attempting downloads
medipi.downloadable.resilienceattempts 2
#Directory in which to store the hardware downloadable downloads
medipi.downloadable.hardware.downloaddir ${config-directory-location}/downloadable
#Enable download of software update to MediPi
medipi.downloadable.downloadupdates n
#Signing truststore to validate the signing certificate for Hardware updates
medipi.json.sign.truststore.hardware.location ${config-directory-location}/certs/server_device_truststore.jks
medipi.json.sign.truststore.hardware.password password
#Signing truststore to validate the signing certificate for clinician messages
medipi.json.sign.truststore.clinician.location ${config-directory-location}/certs/clinician_truststore.jks
medipi.json.sign.truststore.clinician.password clinician


