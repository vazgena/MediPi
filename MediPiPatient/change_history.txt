MediPi Commit History
============================

MediPi_v1.0.1-PILOT-20160314-1
* Reordering the versioning 
* Implementation of utilities class so that it will be accessible from all classes with references to MediPi.class
* Implementation and use of getImageView method in Utilities class
* Added to MediPi class a method to reset all the data on all the devices loaded onto MediPi so that when data is transmitted it will reset all the devices
* Implementation of images on all the buttons
* Reordering of buttons on the bottom banner

MediPi_v1.0.3-PILOT-20160317-1
- bugfix for LHS button disable whilst transmitting in schedule mode
- Addition of keypad functionality - keypad appears at startup and will reappear at configurable periods of inactivity
n.b. hardcoded the keypad unlocking code so that any code will work until I have created the appropriate certs/jks 
commented out the automatic clear of the data when transmitted

MediPi_v1.0.4-PILOT-20160322-1
- Update to authorisation functionality to use the patient cert jks password to unlock the device
- Extracted out the Spine functionality from SpineTransmitter class. Renamed it to generic Transmitter class and extended it for Spine in preparation for the REST client interface.
- refactored how certain classes are cast and added isAssignableFrom() within an if statement rather than attempting a cast and catching the thrown attempt

MediPi_v1.0.5-PILOT-x
- updated MediPi class to contain a getter for the medipi properties Properties object and updated appropriate other classes to use it
- Updated the transmitted data in all the devices to remove patient identifiable entries, update all times with ISO8601 Zulu timestamps and rearranged the metadata. This required changes to all the device drivers including the python scripts updating. Updated some of the Utilities class dateformatter to take a timezone.
- updated Name for usb devices to have a colon between the make and model
- added :persist to the metadata tags for data to be persisted to the database after transmission
-updated the metadata:format to use the configurable dataseparator
- addition of iso8601time dataelement to questionnaire device
- Medipi version ident which was passed in the data has been reduce to just the version and version name
- MediPi now checks the device jks keystore using the MAC address of the host machine - this cert name is used to set a system property - the cert name is used for the Restful request
- The Keypad class sets a system property to be the patient cert name which is used for the Restful request

MediPi_v1.0.7-PILOT-20160608-1
- Removed python dependency to communicate to serial USB devices e.g. Beurer BM55 and BF480
- Source code migrated to build using maven.
- Maven build produces a single executable jar with all the dependencies embedded.
- Collated all the external dependencies as maven dependencies hence eliminating the need to manually collect the dependencies and add them on the classpath.
- Checked in external dependencies which are not available into maven repository to lib directory. These are added in pom.xml as dependencies which will help in building MediPi code on any machine which has maven installation without worrying about collecting these dependencies.
- Restructured the MediPi code.
- Added javax-usb and config files to the repository.
- Added parent pom to build javax-usb and MediPi with a single command.
- Updated README.md file to remove the references of python dependencies and added instructions to update configurations and run MediPi.
MediPi_v1.0.7a-PILOT- 20160701-1
- Replaced the thirdparty MessageBox library with the native JavaFX one and made the detection of javaFX thread reliable. Additionally prevented multiple message reporting of the same error
- Implemented a patient and a hardware download interface to accept patient messages and changes to the config and software. Clinician Messages completed and working but configuration update is partially complete. It will download artifacts but requires some code to act upon the instructions and make changes on the local system 
- Removed all Spine messaging components
- Removed all "practitioner" host stubs as we now have a concentrator host
- Detection of local MAC address for unloacking device JKS has been made more robust for Linux OS - will still find MAC addressees when network is down
- Addition of two-way SSL or Mutual Authentication of data in transit for connection between MediPi Patient device and MediPi Concentrator
- Implementation of DistributionEnvelope XML Encryption of the device payloads. This is largely implemented but will be replaced (including the DistributionEnvelope structure) by json equivalents. The intention is that MediPi will move to all messaging in json format. A json encryption/signing solution will be implemented 
- All Restful messaging has been extracted into a common interface
- TODO - JavaDoc and Boiler plate required for new + updated classes

MediPi_v1.0.7b-PILOT- 20160724-1
- Implementation of Downloadable interface on MediPi device allowing it to receive payloads from the concentrator. This is done by polling the concentrator periodically
- Handlers for downloadable for Hardware update and patient messages
- Implementaion of Encryption and signing of the payload data using the patient certificate
- refactoring of a Restful messaging engine to consolidate the functions for all messaging
- Corrected reading heartrates >127BPM for ContecCMS50D+ 
- Changed Keypad authentication to react only to mouse and not to keypad
- Alert messages in MediPiMessageBox made to be standard height to avoid close button being off the bottom of the screen
- Updated all Device classes to return scheduleEffectiveDate, schedulexpiryDate and units of measure in a DeviceDataDO data object
- Messenger updated to display alerts from an AlertDO format- will need extending to handle diferent classes
 - Oximeter extended to allow return of full streamed data (i.e. with waveform) or just averages of the SpO2 and Pulse

MediPi_v1.0.8-PILOT- 20160907-1
- Implementation of Java 8 DateTime
- removal of timezone parameter in favour of auto detection from system
- detection of user password when MediPi is uinlocked through authorisation interface 

Changes since MediPi_v1.0.8-PILOT-20160907-1
- Changed the timstamp on incoming patient txt messages to be epoch time
- added an Open VPN manager to connect and disconnect when data is transmitted and concentrator is to be polled for incoming messages
- added a visual indicator of the VPN conncetion status
- added Bluetooth services and managers to supportr new Marsden M430 BT scales driver
- added driver for Marsden scales 
- removed "advanced" graphical view of scales class - intention to remove all "advanced" views from other Elements
- rewritten transmit button bindings for stability

Changes since MediPi_v1.0.8a-PILOT-20160929-1
- Inclusion of code to bring up and put down the VPN vonnection so that it's only connected when attempting to upload data or download messages/software/configuration
- addition of close button to fatal error screen 
- all exiting of MediPi is now handled through the MediPi class - both modes: close and close down linux os
- addition of close button to Keypad class
- refactoring Keypad class to speed up the time that it takes to authenticate one the code is entered and tighten up the wrong code process
- Scale refactored to remove the "detailed view" mode. Abstraction of units, format and column names from Scale to device driver
- Update of Contec driver to correct a bug whereby it would lock up
- Creation of Marsden M430 device driver 
- Addition of Bluetooth management service classes

DashboardTile - The tile can be configured to be visible or not and the background can be coloured depending on state change of element
- MediPi main screen - addition of lower banner containing a digital clock and an LED style indicator for connection to the VPN/concentrator. It also contains a rolling display of alert actions e.g. scheduler or notification message alerts or time server synchronisation failures
-  MediPi main screen - refactoring of patient data which is now taken from a separate json file c.f. the properties file. This allows the addition of an interface on the settings element to update the patient details - this element is only accessible via the config mode
-addition of time synchronisation service which ensures that MediPi Patient application cannot record any data without first synchronising with a time server
- addition of new admin mode - this is a separate login mode desigend to be used for admin purposes: update/input of patient details, bluetooth pairing bluetooth MAC address. It closes MediPi Patient with a specific exit code which can then be acted upon by the calling script e.g. to call MediPi Patient with an Admin configuration
- Scheduler updated with better/clearer screen - The view shows information about the most recent schedule in words and a list of activity over a configurable period (default period 7 days)
- Transmitter - addition of a summary of the data recorded by the devices (if present otherwise the device name is displayed)
- Questionnaire updated to display only the enumerated question currently being asked in order to save space and help understanding. Addition of red/green flag status to show outcome of questionnaire
- Restructured the generic device and concrete device classes to properly delineate responsibility and allow for addition of bluetooth devices


Changes since MediPi_v1.0.13
- bug fixes
- Ability to configure MediPi Patient to exclude responses/messages functionality
- Addition of WiFi monitor LED
- Ability to lock MediPi Patient software, requiring patient PIN to be input
- All screens including pop-up messages are controlled using CSS
- Addition of confirmation on close of MediPi
- Patient Details are now stored in a json file c.f. medipi.properties and can be updated from the Settings tab
- Addition of login functionality for admin to allow access to Settings functionality - on Raspberry Pi this allows boot to full desktop for managing wifi access and BT pairing
- Creation of a authentication class to not require PIN input for booting in admin mode
- Update of Blood Pressure to allow 2 mode of measurement: Standing and Sitting
- Updated Schedule to be called Readings
- Updated Readings to allow back and forwards navigation through devices to be recorded
- Guide is reset to first screen whenever navigated away from
- Update Questionnaire to transmit full questions and answers in a json format to allow display on the clinical front end
- Creation of new Responses screen to show status of each submitted device data against the thresholds set on the clinical front end. An overall status icon is displayed on the tile to show if the full submission indicates any issues
- Addition weight in stones ofr display purposes only
- Update of schedule/Readings class to use a json file c.f. previous text format file. This allows better read/write to file and ability for other Elements to request and understand the schedule
- Settings now allows the management of: Patient Details, Addition/exclusion of elements in the readings/schedule, reset of time/mode for those devices that require it, bluetooth MAC address maintenance
- Thermometer class has improved manual input rollers
- Transmitter will inform patient if any of data from the scheduled items has not been populated
- Ability to stop data requests from physiological devices
- TimestampChecker extended to only take latest data value if required
- improvements to understandability of alert messages to patient
- addition of connection timeout to MediPi Concentrator

Changes MediPi_v1.0.15 PILOT-20170920-1

- Update the method which MediPi uses to access the data from the Continua Approved devices with the implementation of Signove Antidote library. This is now used for both the Nonin Pulse Oximeter and the Omron Blood Pressure cuff.
- Update to the UI to improve the look and feel of the messages to the user.
- Refactored the direct messaging to allow SimpleMessages to be directed to the Messenger Element and Alerts to the Responses Element. When Messenger is instantiated with "showdashboardtile No" it will now just show the incoming communication as a popup message, otherwise it will be displayed in the same table as previously.


